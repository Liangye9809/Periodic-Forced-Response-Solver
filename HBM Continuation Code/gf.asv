% function F = gf(x, p) % x is a 3dof column vector, represent 2 tangential directions and 1 normal direction
%     kn = p.kn; % stiffness in normal direction
%     xn0 = p.xn0; % initial gap between this contact point
%     mu = p.mu; % friciton coefficient of coulomb friction
%     kt = p.kt; % stiffness of 2 tangential direction in column vector
%     % w = p. w; % slip displacement of 2 tangential direction in column vector
%     N = NormalForces(x(3), kn, xn0);
%     [T1, p.w(1)] = TangentialForce(x(1), p.w(1), kt(1), mu(1), N);
%     [T2, p.w(2)] = TangentialForce(x(2), p.w(2), kt(2), mu(2), N);
%     F = [T1; T2; N];
% end

function [F, w] = gf(x, fc, T1, T2, Nx) % x is a 3*Np dof row vector, represent 2*Np tangential directions and 1*Np normal direction
     
    % kn = fc.kn; % stiffness in normal direction
    % xn0 = fc.xn0; % initial gap between this contact point
    % mu = fc.mu; % friciton coefficient of coulomb friction
    % kt = fc.kt; % stiffness of 2 tangential direction in column vector
    % w = fc.w;
    
    FN = NormalForces(x(3:3:end), fc.kn, fc.xn0);
    for i = 1:Nx
        % FN(i) = NormalForces(x(3*(i-1)+3), kn(i), xn0(i));
        [T1(i), fc.w(1, i)] = TangentialForces(x(3*(i-1)+1), fc.w(1, i), fc.kt(1, i), fc.mu(1, i), FN(i));
        [T2(i), fc.w(2, i)] = TangentialForces(x(3*(i-1)+2), fc.w(2, i), fc.kt(2, i), fc.mu(2, i), FN(i));
    end

    % [T1, w(1, :)] = TangentialForces(x(1:3:end), w(1, :), kt(1, :), mu(1, :), FN);
    % [T2, w(2, :)] = TangentialForces(x(2:3:end), w(2, :), kt(2, :), mu(2, :), FN);
    
    F = [T1; T2; FN];
    F = F(:);
    F = F';

    w = 
end
